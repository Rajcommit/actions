##https://notes.kodekloud.com/docs/GitHub-Actions-Certification/Custom-Actions/Metadata-syntax-for-GitHub-Actions
## https://docs.github.com/en/actions/reference/workflows-and-actions/metadata-syntax
name: "Get & cache Dependencies"
description: "Get code and cache dependencies (via npm) and cache them for future runs"
##adding inputs is optional, if you want to use it in your action
inputs:
  caching:
    description: "Enabling caching for dependdencies"
    required: false ## the use of 'required' is to make it optional
    default: "true" ## default value is true, if not provided by user
outputs:
  cache-hit:
    description: "Cache hit status"
    value: ${{ steps.install.outputs.cache }} ## this will be used to check if cache is hit or not
runs:
  using: "composite"
  steps:
    - name: Cache dependencies
      if: inputs.caching == 'true'  ## if caching is enabled, then cache dependencies
      ## we can use actions which are precreated here || https://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/
      id: cache
      uses: actions/cache@v4 ## we can use actions which are precreated here || https://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true'  || inputs.caching == 'true' ## if cache is not hit, then install dependencies
      run: |
           npm ci
           echo "cache=${{ steps.cache.outputs.cache-hit }}" >> "$GITHUB_OUTPUT" ## this will be used to check if cache is hit or not
      shell: bash
